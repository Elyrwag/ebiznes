# This workflow will build and push a Docker container to an Azure Web App when a commit is pushed to your default branch.
#
# This workflow assumes you have already created the target Azure App Service web app.
# For instructions see https://docs.microsoft.com/en-us/azure/app-service/quickstart-custom-container?tabs=dotnet&pivots=container-linux
#
# To configure this workflow:
#
# 1. Download the Publish Profile for your Azure Web App. You can download this file from the Overview page of your Web App in the Azure Portal.
#    For more information: https://docs.microsoft.com/en-us/azure/app-service/deploy-github-actions?tabs=applevel#generate-deployment-credentials
#
# 2. Create a secret in your repository named AZURE_WEBAPP_PUBLISH_PROFILE, paste the publish profile contents as the value of the secret.
#    For instructions on obtaining the publish profile see: https://docs.microsoft.com/azure/app-service/deploy-github-actions#configure-the-github-secret
#
# 3. Create a GitHub Personal access token with "repo" and "read:packages" permissions.
#
# 4. Create three app settings on your Azure Web app:
#       DOCKER_REGISTRY_SERVER_URL: Set this to "https://ghcr.io"
#       DOCKER_REGISTRY_SERVER_USERNAME: Set this to the GitHub username or organization that owns the repository
#       DOCKER_REGISTRY_SERVER_PASSWORD: Set this to the value of your PAT token from the previous step
#
# 5. Change the value for the AZURE_WEBAPP_NAME.
#
# For more information on GitHub Actions for Azure: https://github.com/Azure/Actions
# For more information on the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# For more samples to get started with GitHub Action workflows to deploy to Azure: https://github.com/Azure/actions-workflow-samples

name: Build and deploy a container to an Azure Web App

env:
  AZURE_WEBAPP_NAME_FRONTEND: shop-app-frontend
  AZURE_WEBAPP_NAME_BACKEND: shop-app-backend

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

      - name: Log in to GitHub container registry
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.CR_PAT }}

      - name: Lowercase the repo name and username
        run: echo "REPO=${GITHUB_REPOSITORY,,}" >>${GITHUB_ENV}

      - name: Build and push frontend container image to registry
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          push: true
          tags: ghcr.io/${{ env.REPO }}-frontend:${{ github.sha }}
          context: ./cloud-CI/client
          file: ./cloud-CI/client/Dockerfile

      - name: Build and push backend container image to registry
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          push: true
          tags: ghcr.io/${{ env.REPO }}-backend:${{ github.sha }}
          context: ./cloud-CI/server
          file: ./cloud-CI/server/Dockerfile

  deploy:
    permissions:
      contents: none
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Development'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Lowercase the repo name and username
        run: echo "REPO=${GITHUB_REPOSITORY,,}" >>${GITHUB_ENV}

      - name: Deploy frontend to Azure Web App
        id: deploy-frontend-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME_FRONTEND }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE_FRONTEND }}
          images: 'ghcr.io/${{ env.REPO }}-frontend:${{ github.sha }}'

      - name: Deploy backend to Azure Web App
        id: deploy-backend-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME_BACKEND }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE_BACKEND }}
          images: 'ghcr.io/${{ env.REPO }}-backend:${{ github.sha }}'

  notify:
    permissions:
      contents: none
    runs-on: ubuntu-latest
    needs: [build, deploy]

    steps:
      - name: Send email notification
        uses: dawidd6/action-send-mail@v5
        with:
          server_address: ${{ secrets.MAIL_SERVER }}
          server_port: ${{ secrets.MAIL_PORT }}
          username: ${{ secrets.MAIL_USERNAME }}
          password: ${{ secrets.MAIL_PASSWORD }}
          subject: "Build & Deployment - ${{ github.repository }}"
          to: ${{ secrets.MAIL_TO_USERNAME }}
          from: GitHub CI <${{ secrets.MAIL_USERNAME }}>
          html_body: |
            <b>Build & Deploy on Azure have been completed</b><br>
            Repo: <a href="https://github.com/${{ github.repository }}">${{ github.repository }}</a><br>

  tests:
    permissions:
      contents: none
    runs-on: ubuntu-latest
    needs: deploy
    defaults:
      run:
        working-directory: ./cloud-CI/tests

    steps:
      - uses: actions/checkout@v4
      
      - name: Set BASE_URL env
        run: echo "CYPRESS_BASE_URL=${{ vars.FRONTEND_URL }}" >> $GITHUB_ENV

      - name: Set BACKEND_URL env
        run: echo "BACKEND_URL=${{ vars.BACKEND_URL }}" >> $GITHUB_ENV

      - name: Install Node dependencies
        run: npm ci

      - name: Wait for frontend
        run: npx wait-on ${{ env.CYPRESS_BASE_URL }}

      - name: Wait for backend
        run: npx wait-on ${{ env.BACKEND_URL }}

      - name: Run Cypress tests
        run: npx cypress run
